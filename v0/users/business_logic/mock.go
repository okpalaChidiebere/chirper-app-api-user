// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package usersservice is a generated GoMock package.
package usersservice

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	usermodel "github.com/okpalaChidiebere/chirper-app-api-user/v0/users/model"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateUserToDynamoDb mocks base method.
func (m *MockService) CreateUserToDynamoDb(ctx context.Context, user *usermodel.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserToDynamoDb", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserToDynamoDb indicates an expected call of CreateUserToDynamoDb.
func (mr *MockServiceMockRecorder) CreateUserToDynamoDb(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserToDynamoDb", reflect.TypeOf((*MockService)(nil).CreateUserToDynamoDb), ctx, user)
}

// GetUsers mocks base method.
func (m *MockService) GetUsers(ctx context.Context, limit int32, nextKey string) ([]*usermodel.User, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", ctx, limit, nextKey)
	ret0, _ := ret[0].([]*usermodel.User)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockServiceMockRecorder) GetUsers(ctx, limit, nextKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockService)(nil).GetUsers), ctx, limit, nextKey)
}
